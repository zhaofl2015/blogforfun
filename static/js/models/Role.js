// Generated by CoffeeScript 1.9.3
(function() {
  var Role;

  Role = (function() {
    function Role(obj) {
      var that;
      this.id = ko.observable((obj != null) && (obj.id != null) ? obj.id : '');
      this.name = ko.observable((obj != null) && (obj.name != null) ? obj.name : '');
      this.content = ko.observable((obj != null) && (obj.content != null) ? obj.content : '');
      this.seconds = ko.observable((obj != null) && (obj.seconds != null) ? obj.seconds : '');
      this.role_type = ko.observable((obj != null) && (obj.role_type != null) ? obj.role_type : 1);
      this.resource = (obj != null) && (obj.resource != null) ? obj.resource : new Resource();
      this.voice_text = ko.observable((obj != null) && (obj.voice_text != null) ? obj.voice_text : '');
      this.voice_texts = ko.observableArray([]);
      that = this;
      if ((obj != null) && (obj.voice_texts != null)) {
        ko.utils.arrayForEach(obj.voice_texts, function(voice_text) {
          that.voice_texts.push(new Voice(voice_text));
        });
      }
      if (this.voice_texts().length === 0) {
        this.voice_texts.push(new Voice(''));
      }
      this.content.subscribe(function(newValue) {
        that.content($tools.replaceAll(newValue, "data-bind", ""));
      });
    }

    Role.prototype.delete_resource = function() {
      this.resource.id('');
      this.resource.name('');
      this.resource.url('');
    };

    return Role;

  })();

  this.Role = Role;

}).call(this);

//# sourceMappingURL=Role.js.map
