// Generated by CoffeeScript 1.9.3
(function() {
  var Answer;

  Answer = (function() {
    function Answer(obj) {
      var that;
      this.id = ko.observable((obj != null) && (obj.id != null) ? obj.id : '');
      this.content = ko.observable((obj != null) && (obj.content != null) ? obj.content : '');
      this.score = ko.observable((obj != null) && (obj.score != null) ? obj.score : 1);
      this.tips = ko.observableArray((obj != null) && (obj.tips != null) ? obj.tips : []);
      this.points = ko.observableArray((obj != null) && (obj.points != null) ? obj.points : []);
      this.classify_name = ko.observable((obj != null) && (obj.classify_name != null) ? obj.classify_name : '');
      this.editor_type = ko.observable((obj != null) && (obj.editor_type != null) ? obj.editor_type : 0);
      this._editor_code = $tools.guid("option_xxxxxxxxxxxxxxxxxxxxxxxxxx");
      this._search_point_id = ko.observable('');
      this._search_point_content = ko.observable('');
      this._search_point_type = ko.observable(false);
      that = this;
      this.editor_type.subscribe(function(newValue) {
        if (newValue === 1) {
          UE.getEditor(that._editor_code).setContent(that.content());
        }
      });
      this.content.subscribe(function(newValue) {
        that.content($tools.replaceAll(newValue, "data-bind", ""));
      });
    }

    Answer.prototype.add_option_point = function(obj, event) {
      var i, input, is_in_array, len, p, point, ref;
      input = $(event.target).closest('.form-group').find('.treeDialog');
      point = TreeDialogMod.getTagsOf(input)[0];
      if (point != null) {
        TreeDialogMod.clearTags();
        this._search_point_id(point.id);
        this._search_point_content(point.text);
        is_in_array = false;
        ref = this.points();
        for (i = 0, len = ref.length; i < len; i++) {
          p = ref[i];
          if (p.id() + '' === point.id + '') {
            is_in_array = true;
          }
        }
        if (!is_in_array) {
          this.points.push(new Point({
            id: this._search_point_id(),
            content: this._search_point_content(),
            isKeyPoint: this._search_point_type()
          }));
        }
        this._search_point_id('');
        this._search_point_content('');
        this._search_point_type(false);
      }
    };

    return Answer;

  })();

  this.Answer = Answer;

}).call(this);

//# sourceMappingURL=Answer.js.map
